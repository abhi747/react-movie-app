{"version":3,"sources":["config/api.js","config/config.js","components/MovieSearch.js","components/MovieCard.js","components/MoviesProfile.js","components/MovieDetails.js","components/Header.js","components/AppModal.js","App.js","serviceWorker.js","index.js"],"names":["fetchMovieDetails","searchTerm","fetch","MovieSearch","state","search","movieDetails","handleChange","e","setState","target","value","handleSubmit","preventDefault","then","response","json","data","Response","props","setMovieDetails","catch","err","Fragment","onSubmit","this","className","type","placeholder","onChange","disabled","Component","MovieCard","Title","Year","Poster","style","width","height","src","alt","profileMoviesProfile","profileMovies","removeProfileMovies","length","profilesMovieList","map","movie","key","imdbID","onClick","bind","MovieDetails","setProfileMovies","Header","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","exact","path","render","MoviesProfile","AppModal","isOpen","toggleModal","modalMsg","Modal","toggle","ModalBody","ModalFooter","Button","color","App","modal","checkIfDuplicateProfileMovie","prevState","newProfileMovies","movieToBeChecked","find","movieToBeRemoved","filter","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.c24adb08.chunk.js","sourcesContent":["import { omdbEndpoint } from \"./config\"\n\nfunction fetchMovieDetails(searchTerm) {\n\treturn fetch(`${omdbEndpoint}&t=${searchTerm}`);\n}\n\nexport { fetchMovieDetails };\n","export const omdbEndpoint = \"http://www.omdbapi.com/?apikey=8365711f\";","import React, { Component } from \"react\";\nimport { fetchMovieDetails } from \"../config/api\";\n\nexport class MovieSearch extends Component {\n\tstate = {\n\t\tsearch: \"\",\n\t\tmovieDetails: {},\n\t};\n\n\thandleChange = e => {\n\t\tthis.setState({\n\t\t\tsearch: e.target.value\n\t\t});\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tfetchMovieDetails(\n\t\t\tthis.state.search\n\t\t).then((response) => {\n\t\t\treturn response.json();\n\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tif (data.Response === \"False\") {\n\t\t\t\t\tthis.props.setMovieDetails({});\n\t\t\t\t} else {\n\t\t\t\t\tthis.props.setMovieDetails(data);\n\t\t\t\t}\n\t\t\t}).catch(err => {\n\t\t\t\tthis.props.setMovieDetails({});\n\t\t\t});\n\n\t\tthis.setState({\n\t\t\tsearch: \"\"\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<div className=\"input-group col-md-5 mt-3 mb-4 mx-auto\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tplaceholder=\"Search Movies\"\n\t\t\t\t\t\t\tvalue={this.state.search}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"input-group-append\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={!this.state.search}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSearch\n              </button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default MovieSearch;\n","import React from 'react'\n\nexport default function MovieCard(props) {\n\tconst { Title, Year, Poster } = props.movieDetails;\n\n\tif (!Title)\n\t\treturn null;\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<h5 className=\"text-center\">{Title}</h5>\n\t\t\t<div className=\"card mx-auto mt-3\" style={{ width: \"15rem\" }}>\n\t\t\t\t<img className=\"card-img-top\" height=\"350\" src={Poster} alt=\"Movie poster\" />\n\t\t\t</div>\n\t\t\t<div className=\"card-text text-center my-2\">({Year})</div>\n\t\t</React.Fragment>\n\t);\n}\n","import React, { Component } from 'react'\nimport MovieCard from \"./MovieCard\";\n\nexport class profileMoviesProfile extends Component {\n\n\trender() {\n\t\tconst { profileMovies, removeProfileMovies } = this.props;\n\n\t\tif (!profileMovies.length)\n\t\t\treturn (\n\t\t\t\t<h4 className=\"mt-5 text-center\">No profileMovies in the profile yet!</h4>\n\t\t\t)\n\t\tconst profilesMovieList = profileMovies.map(movie => {\n\t\t\treturn (\n\t\t\t\t<div className=\"col-md-3 mb-3 text-center\" key={movie.imdbID}>\n\t\t\t\t\t<MovieCard movieDetails={movie} />\n\t\t\t\t\t<button className=\"btn btn-danger\" onClick={removeProfileMovies.bind(this, movie)}>Remove</button>\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\t\treturn (\n\t\t\t<div className=\"row mx-0 mt-3\">\n\t\t\t\t{profilesMovieList}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default profileMoviesProfile\n","import React, { Component } from \"react\";\n\nimport MovieCard from \"./MovieCard\";\n\nexport class MovieDetails extends Component {\n\n\tsetProfileMovies = (movieDetails) => {\n\t\tthis.props.setProfileMovies(movieDetails);\n\t}\n\n\trender() {\n\t\tconst { movieDetails } = this.props\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\n\t\t\t\t<MovieCard movieDetails={movieDetails} />\n\t\t\t\t<div className=\"text-center\">\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\ttype=\"button\" onClick={this.setProfileMovies.bind(this, movieDetails)}\n\t\t\t\t\t\tdisabled={!movieDetails.Title}\n\t\t\t\t\t>Add to profile</button>\n\t\t\t\t</div>\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default MovieDetails;\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport MovieSearch from \"./MovieSearch\";\nimport MoviesProfile from \"./MoviesProfile\";\nimport MovieDetails from \"./MovieDetails\";\n\nexport default function Header(props) {\n\tconst { setMovieDetails, movieDetails, setProfileMovies, profileMovies, removeProfileMovies } = props;\n\n\treturn (\n\t\t<Router>\n\t\t\t<nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">\n\t\t\t\t\tMovie DB\n          </Link>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"navbar-toggler\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tdata-toggle=\"collapse\"\n\t\t\t\t\tdata-target=\"#navbarSupportedContent\"\n\t\t\t\t\taria-controls=\"navbarSupportedContent\"\n\t\t\t\t\taria-expanded=\"false\"\n\t\t\t\t\taria-label=\"Toggle navigation\"\n\t\t\t\t>\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\t\t\t\t\t<ul className=\"navbar-nav mr-auto\">\n\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"profile\">\n\t\t\t\t\t\t\t\tMy Profile\n                </Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</nav>\n\n\t\t\t<Switch>\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath=\"/\"\n\t\t\t\t\trender={() => (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<MovieSearch setMovieDetails={setMovieDetails} />\n\t\t\t\t\t\t\t<MovieDetails movieDetails={movieDetails} setProfileMovies={setProfileMovies} />\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t\t<Route path=\"/profile\">\n\t\t\t\t\t<MoviesProfile profileMovies={profileMovies} removeProfileMovies={removeProfileMovies} />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\n\t\t</Router>\n\t)\n}\n","import React from 'react'\nimport { Button, Modal, ModalBody, ModalFooter } from 'reactstrap';\n\nexport default function AppModal(props) {\n\n\tconst { isOpen, toggleModal, modalMsg } = props;\n\treturn (\n\t\t<Modal isOpen={isOpen} toggle={toggleModal}>\n\t\t\t<ModalBody>\n\t\t\t\t{modalMsg}\n\t\t\t</ModalBody>\n\t\t\t<ModalFooter>\n\t\t\t\t<Button color=\"primary\" onClick={toggleModal}>Okay</Button>\n\t\t\t</ModalFooter>\n\t\t</Modal>\n\t)\n}\n","import React, { Component } from \"react\";\n\nimport Header from \"./components/Header\";\nimport AppModal from \"./components/AppModal\";\n\n\nexport class App extends Component {\n\tstate = {\n\t\tmovieDetails: {},\n\t\tprofileMovies: [],\n\t\tmodal: false,\n\t\tmodalMsg: ''\n\t};\n\n\tsetMovieDetails = movieDetails => {\n\t\tif (movieDetails.Title) {\n\t\t\tthis.setState({\n\t\t\t\tmovieDetails\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tmovieDetails: {},\n\t\t\t\tmodalMsg: 'Movie not found!',\n\t\t\t\tmodal: true\n\t\t\t})\n\t\t}\n\t};\n\n\tsetProfileMovies = movie => {\n\t\tif (!this.checkIfDuplicateProfileMovie(movie)) {\n\t\t\tconst newProfileMovies = [...this.state.profileMovies, movie];\n\n\t\t\tthis.setState(prevState => ({\n\t\t\t\tprofileMovies: newProfileMovies,\n\t\t\t\tmodalMsg: `${movie.Title} movie added to the profile!`,\n\t\t\t\tmodal: !prevState.modal,\n\t\t\t}))\n\t\t} else {\n\t\t\tthis.setState(prevState => ({\n\t\t\t\tmodalMsg: `${movie.Title} movie already present in the profile!`,\n\t\t\t\tmodal: !prevState.modal\n\t\t\t})\n\t\t\t)\n\t\t}\n\t}\n\n\tcheckIfDuplicateProfileMovie = (movieToBeChecked) => {\n\t\treturn this.state.profileMovies.find(movie =>\n\t\t\tmovie.imdbID === movieToBeChecked.imdbID\n\t\t)\n\t}\n\n\tremoveProfileMovies = (movieToBeRemoved) => {\n\t\tconst newProfileMovies = this.state.profileMovies.filter(movie =>\n\t\t\tmovie.imdbID !== movieToBeRemoved.imdbID\n\t\t);\n\n\t\tthis.setState({\n\t\t\tprofileMovies: newProfileMovies\n\t\t})\n\t}\n\n\ttoggleModal = () => {\n\t\tthis.setState((prevState) => ({\n\t\t\tmodal: !prevState.modal,\n\t\t}));\n\t}\n\n\trender() {\n\t\tconst nav = (\n\t\t\t<React.Fragment>\n\n\t\t\t\t<Header\n\t\t\t\t\tmovieDetails={this.state.movieDetails}\n\t\t\t\t\tprofileMovies={this.state.profileMovies}\n\t\t\t\t\tsetMovieDetails={this.setMovieDetails}\n\t\t\t\t\tsetProfileMovies={this.setProfileMovies}\n\t\t\t\t\tremoveProfileMovies={this.removeProfileMovies}\n\t\t\t\t/>\n\n\t\t\t\t<AppModal\n\t\t\t\t\tisOpen={this.state.modal}\n\t\t\t\t\ttoggleModal={this.toggleModal}\n\t\t\t\t\tmodalMsg={this.state.modalMsg}\n\t\t\t\t/>\n\n\t\t\t</React.Fragment>\n\t\t);\n\n\t\treturn nav;\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}